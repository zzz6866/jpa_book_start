buildscript {
    ext {
        springBootVersion = '1.5.8.RELEASE'
    }
    repositories {
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath 'org.springframework:springloaded:1.2.5.RELEASE'
    }
}

apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

repositories {
    mavenCentral()
}


dependencies {
    def queryDSL = '4.1.4'

    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-thymeleaf')
    runtime('org.springframework.boot:spring-boot-devtools')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile("mysql:mysql-connector-java")
    /*compile("org.mybatis:mybatis-spring")
    compile("org.mybatis:mybatis")*/

    /* slf4j */
    compile(group: 'org.slf4j', name: 'slf4j-api', version: '1.7.21')
    /* hibernate */
    compile(group: 'org.hibernate', name: 'hibernate-core', version: '5.2.5.Final')
    /* lombok */
    compile(group: 'org.projectlombok', name: 'lombok', version: '1.16.8')
    /*groovy*/
    /*compile group: 'org.codehaus.groovy', name: 'groovy-all', version: '2.4.6'*/
    /* class scaner */
    compile(group: 'net.sf.corn', name: 'corn-cps', version: '1.1.7')
    /* h2 database */
    compile(group: 'com.h2database', name: 'h2', version: '1.4.193')
    /* logback-classic */
    compile(group: 'ch.qos.logback', name: 'logback-classic', version: '1.1.8')
    testCompile(group: 'junit', name: 'junit', version: '4.11')

    /* queryDSL */
    compile group: 'com.querydsl', name: 'querydsl-core', version:"$queryDSL"
    compile group: 'com.querydsl', name: 'querydsl-jpa', version:"$queryDSL"
    /*compile group: 'com.querydsl', name: 'querydsl-sql', version:"$queryDSL"*/
    compile group: 'com.querydsl', name: 'querydsl-apt', version:"$queryDSL"
}

apply plugin: 'idea'

idea {
    module {
        inheritOutputDirs = false
        outputDir = file("$buildDir/classes/main/")
    }
}

/* queryDSL Q class path */
def queryDslOutput = file("src/main/generated")

sourceSets {
    main {
        java {
            srcDir "src/main/generated"
        }
    }
}

/* Q class generated */
task generateQueryDSL(type: JavaCompile, group: 'build') {
    doFirst {
        if (!queryDslOutput.exists()) {
            logger.info("Creating `$queryDslOutput` directory")

            if (!queryDslOutput.mkdirs()) {
                throw new InvalidUserDataException("Unable to create `$queryDslOutput` directory")
            }
        }
    }

    source = sourceSets.main.java
    classpath = configurations.compile
    options.compilerArgs = [
            "-proc:only",
            "-processor",
            "com.querydsl.apt.jpa.JPAAnnotationProcessor"
    ]
    destinationDir = queryDslOutput
}

/* queryDSL compile */
compileJava.dependsOn(generateQueryDSL)

/* queryDSL clean */
clean {
    delete queryDslOutput
}

/*
springBoot {
    mainClass = "kr.co.sibal.SpringBootWebApplication"
}*/
